@model HomeUnknown.Models.EventModel

@{
    ViewBag.Title = "InputEvent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>InputEvent</h2>

<form id="inputform">
    <input type="hidden" name="timelineid" value="06AE6ABB-0296-4F10-B6AF-3B13FE9B4FCF" />
    <label for="name">
        Event Name
        <input type="text" name="name" id="eventname" />
    </label>
    <br />
    <label for="location">
        Location
        <input type="text" name="location" id="location" />
    </label>
    <br />
    <label for="year">
        Event Date
        <input type="text" name="year" id="eventyear" />
    </label>
    <br />
    <button type="button" id="submitButton">Submit</button>
</form>

@section Scripts{

    <script type="text/javascript">

        $(document).ready(function () {

            SubmitEvent();
        });

        function SubmitEvent() {
            $("#submitButton").bind("click", function (e) {
                e.preventDefault();

                var formData = $("#inputform").serialize();

                $.post('/api/events', formData).done(function (data) {
                    alert(data);
                });
            });
        }


    </script>
<script>
    (function () {
        var docElem = window.document.documentElement, didScroll, scrollPosition;

        // trick to prevent scrolling when opening/closing button
        function noScrollFn() {
            window.scrollTo(scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0);
        }

        function noScroll() {
            window.removeEventListener('scroll', scrollHandler);
            window.addEventListener('scroll', noScrollFn);
        }

        function scrollFn() {
            window.addEventListener('scroll', scrollHandler);
        }

        function canScroll() {
            window.removeEventListener('scroll', noScrollFn);
            scrollFn();
        }

        function scrollHandler() {
            if (!didScroll) {
                didScroll = true;
                setTimeout(function () { scrollPage(); }, 60);
            }
        };

        function scrollPage() {
            scrollPosition = { x: window.pageXOffset || docElem.scrollLeft, y: window.pageYOffset || docElem.scrollTop };
            didScroll = false;
        };

        scrollFn();

        [].slice.call(document.querySelectorAll('.morph-button')).forEach(function (bttn) {
            new UIMorphingButton(bttn, {
                closeEl: '.icon-close',
                onBeforeOpen: function () {
                    // don't allow to scroll
                    noScroll();
                },
                onAfterOpen: function () {
                    // can scroll again
                    canScroll();
                },
                onBeforeClose: function () {
                    // don't allow to scroll
                    noScroll();
                },
                onAfterClose: function () {
                    // can scroll again
                    canScroll();
                }
            });
        });

        //// for demo purposes only
        //[].slice.call(document.querySelectorAll('form button')).forEach(function (bttn) {
        //    bttn.addEventListener('click', function (ev) { ev.preventDefault(); });
        //});
    })();
</script>

}